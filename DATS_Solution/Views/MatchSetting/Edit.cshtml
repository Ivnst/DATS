@model DATS.Match

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title" id="myModalLabel2">
        Редактирование мероприятия
    </h4>
</div>

<script src="~/Scripts/CustomValidation/MatchValidation.js" type="text/javascript"></script>

<script>
    $(document).ready(function () {
        $('#iksar').click(function (event) {
            event.preventDefault();
            var subFind = $("#FormForEdit");
            if (validium()) {
                subFind.submit();
            }
        });
    });
    function validium() {
        var nonError = true;
        var errMessage1 = "", errMessage2 = "";
        $("#begining").val(function (i, v) {
            var fullStr = v;
            var dateTmp = fullStr.substring(0, fullStr.indexOf(" "));
            var timeTmp = fullStr.substring(fullStr.indexOf(" ") + 1);

            var dayStr = dateTmp.substring(0, dateTmp.indexOf("."));
            dateTmp = dateTmp.substring(dateTmp.indexOf(".") + 1);
            var monthStr = dateTmp.substring(0, dateTmp.indexOf("."));
            dateTmp = dateTmp.substring(dateTmp.indexOf(".") + 1);
            var yearStr = dateTmp;

            var hourStr = timeTmp.substring(0, timeTmp.indexOf(":"));
            timeTmp = timeTmp.substring(timeTmp.indexOf(":") + 1);
            var minuteStr = timeTmp;

            var msNoZone = Date.parse(yearStr + '-' + monthStr + '-' + dayStr + 'T' + hourStr + ':' + minuteStr + ':00.000');

            if (!isFinite(msNoZone)) {
                nonError = false;
                errMessage1 = "- введен неверный формат, используйте dd.MM.yyyy HH:mm\n";
            } else {
                if ((msNoZone >= 946684800000) && (msNoZone <= 4102358400000)) {
                    // Ok
                } else {
                    nonError = false;
                    errMessage2 = "- дата должна быть в диапазоне от 01.01.2000 и до 31.12.2099.";
                }
            }

            return v;
        });
        if (nonError == false) alert("Ошибка в поле \"Дата и время начала\":\n" + errMessage1 + errMessage2);
        return nonError;
    }
</script>



@using (Html.BeginForm("Edit", "MatchSetting", FormMethod.Post, new { Id = "FormForEdit" }))
{
    @Html.ValidationSummary(true)

 <div class="modal-body">
     <fieldset>
         <h2 style="color: green;">
             @ViewBag.Stadium.Name
         </h2>

         <div class="editor-label">
             @Html.LabelFor(model => model.Name)
         </div>
         <div class="editor-field">
             @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
             @Html.ValidationMessageFor(model => model.Name)
         </div>

         <div class="editor-label">
             @Html.LabelFor(model => model.BeginsAt)
         </div>
         <div class="editor-field">
             @Html.TextBoxFor(model => model.BeginsAt, "{0:dd.MM.yyyy HH:mm}", new { @class = "form-control", @id = "begining" })
             @Html.ValidationMessageFor(model => model.BeginsAt)
         </div>

         <div class="editor-label">
             @Html.LabelFor(model => model.Duration)
         </div>
         <div class="editor-field">
             @Html.TextBoxFor(model => model.Duration, new { @class = "form-control" })
             @Html.ValidationMessageFor(model => model.Duration)
         </div>

         @Html.HiddenFor(model => model.Id)
         @Html.HiddenFor(model => model.StadiumId)
     </fieldset>
</div>

         <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
          <button type="button" class="btn btn-primary" id="iksar">Сохранить</button>
        </div>
    
}


